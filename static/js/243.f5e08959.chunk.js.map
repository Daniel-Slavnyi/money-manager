{"version":3,"file":"static/js/243.f5e08959.chunk.js","mappings":"yRAeaA,EAAmB,WAC9B,IAAMC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,SAAUF,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIC,WACtCC,MAAON,EAAAA,KAAaM,QACpBC,SAAUP,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIC,WACtCG,gBAAiBR,EAAAA,KAAaS,MAC5B,CAACT,EAAAA,GAAQ,aACT,0BAWEU,GAAWC,EAAAA,EAAAA,MAOXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAfoB,CACpBZ,SAAU,GACVI,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAYjBO,iBAAkBhB,EAClBiB,SARmB,SAAC,EAAD,GAAmD,IAAhDV,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,SAAUL,EAA8B,EAA9BA,SAAce,EAAgB,EAAhBA,UACrDP,GAASQ,EAAAA,EAAAA,IAAS,CAAEZ,MAAAA,EAAOC,SAAAA,EAAUL,SAAAA,KACrCe,GACD,IAQD,OACE,iCACE,UAAC,IAAD,CAAYD,SAAUJ,EAAOO,aAA7B,WACE,SAAC,IAAD,CACEC,WAAY,CACVC,gBACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAACC,EAAA,EAAD,CAAWC,GAAI,CAAEC,MAAO,gBAI9BC,OAAO,SACPC,YAAY,SACZC,GAAG,QACHC,KAAK,QACLC,KAAK,QACL1B,UAAQ,EACR2B,MAAOpB,EAAOqB,OAAO3B,MACrB4B,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQ/B,OAASgC,QAAQ1B,EAAO2B,OAAOjC,OACrDkC,WAAY5B,EAAOyB,QAAQ/B,OAASM,EAAO2B,OAAOjC,SAEpD,SAAC,IAAD,CACEc,WAAY,CACVC,gBACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAACkB,EAAA,EAAD,CAAUhB,GAAI,CAAEC,MAAO,gBAI7BC,OAAO,SACPC,YAAY,WACZC,GAAG,WACHC,KAAK,WACLzB,UAAQ,EACR2B,MAAOpB,EAAOqB,OAAO1B,SACrB2B,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQ9B,UAAY+B,QAAQ1B,EAAO2B,OAAOhC,UACxDiC,WAAY5B,EAAOyB,QAAQ9B,UAAYK,EAAO2B,OAAOhC,YAEvD,SAAC,IAAD,CACEa,WAAY,CACVC,gBACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAACkB,EAAA,EAAD,CAAUhB,GAAI,CAAEC,MAAO,gBAI7BC,OAAO,SACPC,YAAY,mBACZC,GAAG,kBACHC,KAAK,kBACLzB,UAAQ,EACR2B,MAAOpB,EAAOqB,OAAOzB,gBACrB0B,SAAUtB,EAAOuB,aACjBC,MACExB,EAAOyB,QAAQ7B,iBACf8B,QAAQ1B,EAAO2B,OAAO/B,iBAExBgC,WACE5B,EAAOyB,QAAQ7B,iBAAmBI,EAAO2B,OAAO/B,mBAGpD,SAAC,IAAD,CACEY,WAAY,CACVC,gBACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAACmB,EAAA,EAAD,CAAgBjB,GAAI,CAAEC,MAAO,gBAInCC,OAAO,SACPC,YAAY,WACZC,GAAG,WACHC,KAAK,WACLzB,UAAQ,EACR2B,MAAOpB,EAAOqB,OAAO/B,SACrBgC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQnC,UAAYoC,QAAQ1B,EAAO2B,OAAOrC,UACxDsC,WAAY5B,EAAOyB,QAAQnC,UAAYU,EAAO2B,OAAOrC,YAEvD,SAACyC,EAAA,EAAD,CAAQZ,KAAK,SAAb,0BAEF,SAACY,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,KAAK,4BAAvC,qBAKL,E,sCCxHc,SAASC,IACtB,OACE,+BACE,UAAC,KAAD,YACE,8BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAWC,MAAM,OAAOC,OAAO,YAEjC,SAACC,EAAA,EAAD,CAAYL,QAAQ,KAAKM,UAAU,KAAnC,+BAKJ,8BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,IAAD,OAEF,SAACpD,EAAD,aAMX,C,2BCrCGqD,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kQACD,cACJN,EAAQ,EAAUG,C","sources":["components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/@mui/icons-material/AccountBox.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operation';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, InputAdornment } from '@mui/material';\nimport {\n  CssTextField,\n  StyledForm,\n} from 'components/LoginForm/LoginForm.styled';\n\nimport EmailIcon from '@mui/icons-material/Email';\nimport LockIcon from '@mui/icons-material/Lock';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nexport const RegistrationForm = () => {\n  const schema = Yup.object().shape({\n    username: Yup.string().min(1).max(12).required(),\n    email: Yup.string().email(),\n    password: Yup.string().min(6).max(12).required(),\n    confirmPassword: Yup.string().oneOf(\n      [Yup.ref('password')],\n      'Passwords must match'\n    ),\n  });\n\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password, username }, { resetForm }) => {\n    dispatch(register({ email, password, username }));\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <CssTextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon sx={{ color: '#BDBDBD' }} />\n              </InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          placeholder=\"E-mail\"\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          required\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <CssTextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon sx={{ color: '#BDBDBD' }} />\n              </InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          placeholder=\"Password\"\n          id=\"password\"\n          name=\"password\"\n          required\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <CssTextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon sx={{ color: '#BDBDBD' }} />\n              </InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          placeholder=\"Confirm Password\"\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n          required\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.confirmPassword &&\n            Boolean(formik.errors.confirmPassword)\n          }\n          helperText={\n            formik.touched.confirmPassword && formik.errors.confirmPassword\n          }\n        />\n        <CssTextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <AccountBoxIcon sx={{ color: '#BDBDBD' }} />\n              </InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          placeholder=\"Username\"\n          id=\"username\"\n          name=\"username\"\n          required\n          value={formik.values.username}\n          onChange={formik.handleChange}\n          error={formik.touched.username && Boolean(formik.errors.username)}\n          helperText={formik.touched.username && formik.errors.username}\n        />\n        <Button type=\"submit\">REGISTER</Button>\n      </StyledForm>\n      <Button variant=\"secondarybutton\" href=\"/money-manager/auth/login\">\n        Login\n      </Button>\n    </>\n  );\n};\n","import { Typography } from '@mui/material';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\n\nimport { ReactComponent as ReactLogo } from 'styles/images/logo.svg';\nimport { ReactComponent as BgPicture } from 'styles/images/bgPicture.svg';\nimport {\n  LogoContainer,\n  PictureTextWrapper,\n  PictureWrapper,\n  StyledContainer,\n  Wrapper,\n} from 'pages/LoginPage/LoginPage.styled';\nimport React from 'react';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <StyledContainer>\n        <section>\n          <PictureTextWrapper>\n            <PictureWrapper>\n              <BgPicture width=\"100%\" height=\"100%\" />\n            </PictureWrapper>\n            <Typography variant=\"h1\" component=\"h1\">\n              Finance App\n            </Typography>\n          </PictureTextWrapper>\n        </section>\n        <section>\n          <Wrapper>\n            <LogoContainer>\n              <ReactLogo />\n            </LogoContainer>\n            <RegistrationForm />\n          </Wrapper>\n        </section>\n      </StyledContainer>\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;"],"names":["RegistrationForm","schema","Yup","shape","username","min","max","required","email","password","confirmPassword","oneOf","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","resetForm","register","handleSubmit","InputProps","startAdornment","InputAdornment","position","Email","sx","color","margin","placeholder","id","name","type","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","Lock","AccountBox","Button","variant","href","RegisterPage","width","height","Typography","component","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}