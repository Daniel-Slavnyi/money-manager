{"version":3,"file":"static/js/260.3dff192c.chunk.js","mappings":"oQAUMA,EAAU,CACd,CAAEC,MAAO,kBAAmBC,WAAY,OAAQC,MAAO,KACvD,CAAEF,MAAO,OAAQC,WAAY,OAAQC,MAAO,KAC5C,CAAEF,MAAO,OAAQC,WAAY,WAAYC,MAAO,KAChD,CACEF,MAAO,UACPC,WAAY,UACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,SACPC,WAAY,MACZE,KAAM,SACND,MAAO,KAET,CACEF,MAAO,eACPC,WAAY,UACZE,KAAM,SACND,MAAO,MAII,SAASE,IACtB,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAgBF,EAAAA,EAAAA,IAAYG,EAAAA,IAE5BC,EAAWL,EAAgBM,KAAI,SAAAC,GAAW,iCAC3CJ,EAAcK,MAAK,SAAAC,GAAG,OAAIF,EAAYG,aAAeD,EAAIE,EAAnC,KACtBJ,GAF2C,IAG9CK,gBAAiBC,IAAON,EAAYK,iBAAiBE,OAAO,aAHd,IAMhD,OACE,gBAAKC,MAAO,CAAEC,OAAQ,IAAKnB,MAAO,KAAlC,UACE,SAACoB,EAAA,EAAD,CACEC,KAAMb,EACNX,QAASA,EACTyB,SAAU,IACVC,mBAAoB,CAAC,OAI5B,C,sGC/Cc,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,mBACAV,EACC,EADDA,gBAEA,OACE,SAACW,EAAA,EAAD,CAAsBC,YAAaC,EAAAA,EAAnC,UACE,SAACC,EAAA,EAAD,CACAC,YAAY,WACVC,MAAOhB,EACPiB,SAAU,SAAAC,GACRR,EAAmBQ,EAASC,cAC7B,EACDC,YAAa,SAAAC,GAAM,OAAI,SAACC,EAAA,GAAD,QAAWC,GAAI,CAACtC,MAAO,UAAcoC,GAAzC,KAI1B,C,4CCTc,SAASG,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,iBAAkB3B,EAAc,EAAdA,WAC/C4B,GAAUrC,EAAAA,EAAAA,IAAYsC,EAAAA,IACtBC,GAAavC,EAAAA,EAAAA,IAAYG,EAAAA,IACzBqC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHL,GACLG,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,EAAUH,IAMd,OACE,SAACO,EAAA,EAAD,CAAKV,GAAI,CAAEW,SAAU,KAArB,UACE,UAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,WACE,SAACC,EAAA,EAAD,CAAYtC,GAAG,mBAAf,gCACA,SAACuC,EAAA,EAAD,CACEC,QAAQ,mBACRxC,GAAG,aACHyC,MAAM,oBACNxB,MAAOlB,EACPmB,SAba,SAAAwB,GACnBhB,EAAiBgB,EAAMC,OAAO1B,MAC/B,EAMK,SAOG2B,MAAMC,QAAQhB,IACbA,EAAWlC,KAAI,SAAAmD,GAAQ,OACrB,SAACC,EAAA,EAAD,CAA4B9B,MAAO6B,EAAS9C,GAA5C,SACG8C,EAASE,MADGF,EAAS9C,GADH,UASlC,C,4CC7CYiD,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACvD,sCAAuC,CACrCC,MAAOC,EAAAA,EAAAA,KACP,UAAW,CACTC,iBAAiBC,EAAAA,EAAAA,IAAMF,EAAAA,EAAAA,KAAWF,EAAMK,QAAQC,OAAOC,gBAG3D,yDAA0D,CACxDJ,gBAAiBD,EAAAA,EAAAA,MARoB,IAY5Bb,EAAQ,CAAEmB,WAAY,CAAE,aAAc,sB,kBCd5C,IAAMC,GAAa,mHAMbC,GAAO,kIAOPC,GAAS,2EAITC,GAAa,wEAIbC,GAAS,oHAMTC,GAAY,4HAOZC,GAAa,2HAObC,GAAW,4HCnBT,SAASC,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QAClCxC,GAAWC,EAAAA,EAAAA,MACjB,GAA8CwC,EAAAA,EAAAA,WAC5C,IAAIC,MAAOpD,eADb,eAAOnB,EAAP,KAAwBU,EAAxB,KAGA,GAAwB4D,EAAAA,EAAAA,UAAS,UAAjC,eAAOpF,EAAP,KAAasF,EAAb,KACA,GAAoCF,EAAAA,EAAAA,UAClC,wCADF,eAAOxE,EAAP,KAAmB2E,EAAnB,KAGA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,GAArC,eAAOM,EAAP,KAAeC,EAAf,KA+BA,OACE,SAAChB,EAAD,WACE,UAACD,EAAD,CAAekB,SAdU,SAAAC,GAC3BA,EAAEC,iBACF,IAAMC,EAAiB,CACrBjF,gBAAAA,EACAd,KAAAA,EACAY,WAAAA,EACA4E,QAAAA,EACAE,OAAAA,GAEF/C,GAASqD,EAAAA,EAAAA,IAAeD,GACzB,EAIG,WACE,SAACnB,EAAD,+BACA,UAACE,EAAD,WACY,WAAT9E,GACC,SAAC+E,EAAD,sBAEA,SAACE,EAAD,sBAEF,SAACgB,EAAA,EAAD,CACEC,SACE,SAACpC,GAAD,gBACEW,WAAY,CAAE,aAAc,eACxBnB,GAFN,IAGE6C,KAAK,MACLpE,SA7CO,SAAA8D,GACnB,GAAIA,EAAErC,OAAO4C,QAGX,OAFAd,EAAQ,gBACRK,GAAWU,KAAKC,IAAIZ,IAGtBJ,EAAQ,UACRK,EAAUU,KAAKC,IAAIZ,IACnBH,EAAc,uCACf,OAwCiB,YAATvF,GACC,SAACgF,EAAD,uBAEA,SAACC,EAAD,yBAGM,WAATjF,EAAoB,MACnB,SAACsC,EAAD,CACEC,iBAAkBgD,EAClB3E,WAAYA,KAGhB,UAACiE,EAAD,YACE,SAACzC,EAAA,EAAD,CACEL,SApDa,SAAA8D,GAEjBF,EADK,WAAT3F,EACcqG,KAAKC,IAAIC,OAAOV,EAAErC,OAAO1B,SACxBuE,KAAKC,IAAIC,OAAOV,EAAErC,OAAO1B,QACzC,EAiDSmC,MAAOuC,EAAAA,EACPxG,KAAK,SACLyG,YAAY,OACZhC,WAAY,CAAEiC,UAAW,UAAWC,QAAS,UAC7CtE,GAAI,CAAEtC,MAAO,YAEf,SAACwB,EAAD,CACEC,mBAAoBA,EACpBV,gBAAiBA,QAIrB,SAACsB,EAAA,EAAD,CACEL,SAAU,SAAA8D,GACRJ,EAAWI,EAAErC,OAAO1B,MACrB,EACD8E,QAAQ,WACRtD,MAAM,UACNzC,GAAG,UACHgD,KAAK,aAGP,SAACgD,EAAA,EAAD,CAAQ5C,MAAOuC,EAAAA,EAAWI,QAAQ,aAAa5G,KAAK,SAApD,kBAIA,SAAC6G,EAAA,EAAD,CAAQC,QAAS3B,EAASlB,MAAOuC,EAAAA,EAAWI,QAAQ,kBAApD,wBAMP,CClIM,IAAMG,GAAe,oUCQtB9F,EAAQ,CACZ+F,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXpH,MAAO,IACPqH,OAAQ,OACRC,UAAW,GACXC,QAAS,EACTC,aAAc,QAGD,SAASC,IACtB,IACMC,GADQC,EAAAA,EAAAA,KACOpD,QAAQqD,UAE7B,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,EAAd,EAEpB,OACE,4BACE,SAACf,EAAD,CAAiB1E,GAAI,CAAC,EAAGyE,QALV,kBAAMgB,GAAQ,EAAd,EAKf,gBAGA,SAACE,EAAA,EAAD,CACEC,aAAW,EACXJ,KAAMA,EACN1C,QAAS4C,EACT,kBAAgB,oBAChB,mBAAiB,0BALnB,UAOE,SAAChF,EAAA,EAAD,CAAKV,IAAE,kBAAOpB,GAAP,IAAciH,QAAST,EAAOU,QAArC,UACE,SAACjD,EAAD,CAAiBC,QAAS4C,UAKnC,CC9CM,IAAMK,GAAS,iICaP,SAASC,IACtB,IAAM1F,GAAWC,EAAAA,EAAAA,MACXJ,GAAUrC,EAAAA,EAAAA,IAAYsC,EAAAA,IAQ5B,OANAI,EAAAA,EAAAA,YAAU,WACHL,IACLG,GAAS2F,EAAAA,EAAAA,OACT3F,GAASG,EAAAA,EAAAA,OACV,GAAE,CAACN,EAASG,KAGX,UAACyF,EAAD,YACE,SAACZ,EAAD,KACA,SAACvH,EAAD,MAGL,CC5Bc,SAASsI,IACtB,OACE,+BACE,SAACF,EAAD,KAGL,C,wGCTM,IAAMjI,EAAqB,SAAAoI,GAAK,OAAIA,EAAMC,aAAaC,KAAvB,EAE1BpI,EAAmB,SAAAkI,GAAK,OAAIA,EAAMC,aAAa/F,UAAvB,EAExBiG,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,aAAaG,WAAvB,C","sources":["components/TransactionTable/DataTable.jsx","components/TransactionForm/BasicDatePicker.jsx","components/TransactionForm/Categories.jsx","components/TransactionForm/Switcher.jsx","components/TransactionForm/TransactionForm.styled.js","components/TransactionForm/TransactionForm.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/TransactionTable/TransactionTable.styled.js","components/TransactionTable/TransactionTable.jsx","pages/HomePage/HomePage.jsx","redux/transaction/transaction-selector.js"],"sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useSelector } from 'react-redux';\nimport {\n  selectTransactions,\n  selectCategories,\n} from 'redux/transaction/transaction-selector';\n\nimport moment from 'moment/moment';\n\nconst columns = [\n  { field: 'transactionDate', headerName: 'Date', width: 100 },\n  { field: 'type', headerName: 'Type', width: 120 },\n  { field: 'name', headerName: 'Category', width: 120 },\n  {\n    field: 'comment',\n    headerName: 'Comment',\n    type: 'string',\n    width: 200,\n  },\n  {\n    field: 'amount',\n    headerName: 'Sum',\n    type: 'string',\n    width: 100,\n  },\n  {\n    field: 'balanceAfter',\n    headerName: 'Balance',\n    type: 'number',\n    width: 160,\n  },\n];\n\nexport default function DataTable() {\n  const allTransactions = useSelector(selectTransactions);\n  const allCategories = useSelector(selectCategories);\n\n  const newArray = allTransactions.map(transaction => ({\n    ...allCategories.find(obj => transaction.categoryId === obj.id),\n    ...transaction,\n    transactionDate: moment(transaction.transactionDate).format('DD.MM.YY'),\n  }));\n\n  return (\n    <div style={{ height: 500, width: 900 }}>\n      <DataGrid\n        rows={newArray}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[12]}\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport TextField from '@mui/material/TextField';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\nexport default function BasicDatePicker({\n  setTransactionDate,\n  transactionDate,\n}) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePicker\n      inputFormat=\"DD.MM.YY\"\n        value={transactionDate}\n        onChange={newValue => {\n          setTransactionDate(newValue.toISOString());\n        }}\n        renderInput={params => <TextField sx={{width: '181px'}} {...params} />}\n      />\n    </LocalizationProvider>\n  );\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport { selectCategories } from 'redux/transaction/transaction-selector';\nimport { getCategories } from 'redux/transaction/transaction-operation';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selector';\n\nexport default function Categories({ changeCategoryId, categoryId }) {\n  const logedIn = useSelector(selectIsLoggedIn);\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!logedIn) return;\n    dispatch(getCategories());\n  }, [dispatch, logedIn]);\n\n  const handleChange = event => {\n    changeCategoryId(event.target.value);\n  };\n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"categories-label\">Select a category</InputLabel>\n        <Select\n          labelId=\"categories-label\"\n          id=\"categories\"\n          label=\"Select a category\"\n          value={categoryId}\n          onChange={handleChange}\n        >\n          {Array.isArray(categories) &&\n            categories.map(category => (\n              <MenuItem key={category.id} value={category.id}>\n                {category.name}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n","import { alpha, styled } from '@mui/material/styles';\nimport { pink } from '@mui/material/colors';\nimport Switch from '@mui/material/Switch';\n\nexport const PinkSwitch = styled(Switch)(({ theme }) => ({\n  '& .MuiSwitch-switchBase.Mui-checked': {\n    color: pink[600],\n    '&:hover': {\n      backgroundColor: alpha(pink[600], theme.palette.action.hoverOpacity),\n    },\n  },\n  '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n    backgroundColor: pink[600],\n  },\n}));\n\nexport const label = { inputProps: { 'aria-label': 'Color switch demo' } };\n","import styled from '@emotion/styled/macro';\n\nexport const SubmitingForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px 0;\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 30px;\n`;\n\nexport const SumAndDateBox = styled.div`\n  display: flex;\n`;\n\nexport const SwitchBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const IncomeActive = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #24cca7;\n`;\n\nexport const ExpenseActive = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #ff6596;\n`;\n\nexport const SpanPassive = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #e0e0e0;\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { FormControlLabel } from '@mui/material';\nimport { Button, TextField } from '@mui/material';\n\nimport BasicDatePicker from './BasicDatePicker';\nimport Categories from './Categories';\nimport { label, PinkSwitch } from 'components/TransactionForm/Switcher';\nimport { newTransaction } from 'redux/transaction/transaction-operation';\n\nimport mainTheme from 'styles/theme';\nimport {\n  ExpenseActive,\n  FormBox,\n  FormTitle,\n  IncomeActive,\n  SpanPassive,\n  SubmitingForm,\n  SumAndDateBox,\n  SwitchBox,\n} from './TransactionForm.styled';\n\nexport default function TransactionForm({ onClose }) {\n  const dispatch = useDispatch();\n  const [transactionDate, setTransactionDate] = useState(\n    new Date().toISOString()\n  );\n  const [type, setType] = useState('INCOME');\n  const [categoryId, setCategoryId] = useState(\n    '063f1132-ba5d-42b4-951d-44011ca46262'\n  );\n  const [comment, setComment] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const switchChange = e => {\n    if (e.target.checked) {\n      setType('EXPENSE');\n      setAmount(-Math.abs(amount));\n      return;\n    }\n    setType('INCOME');\n    setAmount(Math.abs(amount));\n    setCategoryId('063f1132-ba5d-42b4-951d-44011ca46262');\n  };\n\n  const onNumberChange = e => {\n    type === 'INCOME'\n      ? setAmount(Math.abs(Number(e.target.value)))\n      : setAmount(-Math.abs(Number(e.target.value)));\n  };\n\n  const createNewTransaction = e => {\n    e.preventDefault();\n    const objTransaction = {\n      transactionDate,\n      type,\n      categoryId,\n      comment,\n      amount,\n    };\n    dispatch(newTransaction(objTransaction));\n  };\n\n  return (\n    <FormBox>\n      <SubmitingForm onSubmit={createNewTransaction}>\n        <FormTitle>Add transaction</FormTitle>\n        <SwitchBox>\n          {type === 'INCOME' ? (\n            <IncomeActive>Income</IncomeActive>\n          ) : (\n            <SpanPassive>Income</SpanPassive>\n          )}\n          <FormControlLabel\n            control={\n              <PinkSwitch\n                inputProps={{ 'aria-label': 'controlled' }}\n                {...label}\n                size=\"big\"\n                onChange={switchChange}\n              />\n            }\n          />\n          {type === 'EXPENSE' ? (\n            <ExpenseActive>Expense</ExpenseActive>\n          ) : (\n            <SpanPassive>Expense</SpanPassive>\n          )}\n        </SwitchBox>\n        {type === 'INCOME' ? null : (\n          <Categories\n            changeCategoryId={setCategoryId}\n            categoryId={categoryId}\n          />\n        )}\n        <SumAndDateBox>\n          <TextField\n            onChange={onNumberChange}\n            theme={mainTheme}\n            type=\"number\"\n            placeholder=\"0.00\"\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n            sx={{ width: '190px' }}\n          />\n          <BasicDatePicker\n            setTransactionDate={setTransactionDate}\n            transactionDate={transactionDate}\n          />\n        </SumAndDateBox>\n\n        <TextField\n          onChange={e => {\n            setComment(e.target.value);\n          }}\n          variant=\"standard\"\n          label=\"Comment\"\n          id=\"comment\"\n          name=\"comment\"\n        />\n\n        <Button theme={mainTheme} variant=\"mainbutton\" type=\"submit\">\n          ADD\n        </Button>\n\n        <Button onClick={onClose} theme={mainTheme} variant=\"secondarybutton\">\n          CANCEL\n        </Button>\n      </SubmitingForm>\n    </FormBox>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const OpenModalButton = styled.button`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  background: #24cca7;\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  border-style: none;\n  color: rgba(255, 255, 255, 1);\n  font-size: 40px;\n  font-weight: 100;\n  cursor: pointer;\n  &:hover {\n    scale: 1.1;\n  }\n`;\n","import * as React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { useTheme } from '@mui/material';\n\nimport TransactionForm from 'components/TransactionForm/TransactionForm';\n\nimport { OpenModalButton } from './Modal.styled';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 508,\n  border: 'none',\n  boxShadow: 24,\n  padding: 0,\n  borderRadius: '20px',\n};\n\nexport default function BasicModal() {\n  const theme = useTheme();\n  const colors = theme.palette.colorList;\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <OpenModalButton sx={{}} onClick={handleOpen}>\n        +\n      </OpenModalButton>\n      <Modal\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={{ ...style, bgcolor: colors.white }}>\n          <TransactionForm onClose={handleClose} />\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\npadding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n`;\n\nexport const MainTable = styled.table`\n  display: flex;\n  flex-direction: column;\n\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectIsLoggedIn } from 'redux/auth/auth-selector';\nimport {\n  getCategories,\n  refreshTransactions,\n} from 'redux/transaction/transaction-operation';\n\nimport DataTable from './DataTable';\nimport BasicModal from 'components/Modal/Modal';\n\nimport { Container } from './TransactionTable.styled';\n\nexport default function TransactionTable() {\n  const dispatch = useDispatch();\n  const logedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (!logedIn) return;\n    dispatch(refreshTransactions());\n    dispatch(getCategories());\n  }, [logedIn, dispatch]);\n\n  return (\n    <Container>\n      <BasicModal />\n      <DataTable />\n    </Container>\n  );\n}\n","import TransactionTable from 'components/TransactionTable/TransactionTable';\nimport React from 'react';\n\nexport default function HomePage() {\n  return (\n    <>\n      <TransactionTable />\n    </>\n  );\n}\n","export const selectTransactions = state => state.transactions.items;\n\nexport const selectCategories = state => state.transactions.categories;\n\nexport const selectStatistic = state => state.transactions.summaryItem;\n"],"names":["columns","field","headerName","width","type","DataTable","allTransactions","useSelector","selectTransactions","allCategories","selectCategories","newArray","map","transaction","find","obj","categoryId","id","transactionDate","moment","format","style","height","DataGrid","rows","pageSize","rowsPerPageOptions","BasicDatePicker","setTransactionDate","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","inputFormat","value","onChange","newValue","toISOString","renderInput","params","TextField","sx","Categories","changeCategoryId","logedIn","selectIsLoggedIn","categories","dispatch","useDispatch","useEffect","getCategories","Box","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","label","event","target","Array","isArray","category","MenuItem","name","PinkSwitch","styled","Switch","theme","color","pink","backgroundColor","alpha","palette","action","hoverOpacity","inputProps","SubmitingForm","FormBox","FormTitle","SumAndDateBox","SwitchBox","IncomeActive","ExpenseActive","SpanPassive","TransactionForm","onClose","useState","Date","setType","setCategoryId","comment","setComment","amount","setAmount","onSubmit","e","preventDefault","objTransaction","newTransaction","FormControlLabel","control","size","checked","Math","abs","Number","mainTheme","placeholder","inputMode","pattern","variant","Button","onClick","OpenModalButton","position","top","left","transform","border","boxShadow","padding","borderRadius","BasicModal","colors","useTheme","colorList","React","open","setOpen","handleClose","Modal","keepMounted","bgcolor","white","Container","TransactionTable","refreshTransactions","HomePage","state","transactions","items","selectStatistic","summaryItem"],"sourceRoot":""}